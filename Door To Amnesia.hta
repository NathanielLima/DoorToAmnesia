<html>
  <head>
    <title>Game</title>
    <style>
      body{
        margin : 0px;
        position : fixed;
      }
    </style>
    <meta http-equiv = "x-ua-compatible" content = "ie = 9">
    <hta:application
    maximizeButton = "no"
    minimizeButton = "no"
    scroll = "no"
    border = "thin">
    <script>
    document.addEventListener("keydown", function(e){
      if(e.keyCode == 82){
        window.location.reload();
      }
    });
    </script>
  </head>
  <body oncontextmenu = "return false">
    <script>
      var canvas = document.createElement("canvas");
      var context = canvas.getContext("2d");
      var tileSize = 64;
      var pixel = tileSize/16;
      var FPS = 30;
      var leftPressed = false;
      var rightPressed = false;
      var upPressed = false;
      var downPressed = false;
      var shiftPressed = false;
      var map = [];
      var m = 1;
      var image = [];
      var ctx = [];
      var mask = document.createElement("canvas");
      var maskCtx = mask.getContext("2d");
      var torch = [];
      var door = [];
      var scrollXMap = 0;
      var scrollYMap = 0;
      var transition = false;
      var newXPos = 0;
      var newYPos = 0;
      var newMap = 0;
      var tr = 0;
      var inventory = false;
      var inventoryX = 0;
      var inventoryY = 0;
      var inventoryCursor = false;
      var title = true;
      var titleY = 0;
      var titleCursor = false;
      canvas.width = 11*tileSize;
      canvas.height = 9*tileSize;
      mask.width = canvas.width;
      mask.height = canvas.height;
      window.resizeTo(canvas.width+(window.outerWidth-window.innerWidth), canvas.height+(window.outerHeight-window.innerHeight));
      window.moveTo((screen.width-window.outerWidth)/2, (screen.height-window.outerHeigth)/2);
      document.body.appendChild(canvas);
      for(i = 0; i < 37; i++){
        image[i] = document.createElement("canvas");
        ctx[i] = image[i].getContext("2d");
        image[i].width = canvas.width;
        image[i].height = canvas.height;
      }
      var image_wall1 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,2,2,0,0,0,0,1,1,2,2,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,1,1,2,2,0,0,0,0,1,1,2,2,0],
        [1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,2,2,0,0,0,0,1,1,2,2,0,0,0,0,1],
        [1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,1,1,2,2,0,0,0,0,1,1,2,2,0],
        [1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
      ];
      for(y = 0; y < image_wall1.length; y++){
        for(x = 0; x < image_wall1[y].length; x++){
          if(image_wall1[y][x] == 0){
            ctx[0].fillStyle = "#cccccc";
          }
          if(image_wall1[y][x] == 1){
            ctx[0].fillStyle = "#000000";
          }
          if(image_wall1[y][x] == 2){
            ctx[0].fillStyle = "#ffffff";
          }
          ctx[0].fillRect(x*pixel, y*pixel, pixel, pixel);
        }
      }
      var image_floor1 = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0]
      ];
      var image_floor2 = [
        [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
        [0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0],
        [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],
        [0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
        [0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0],
        [0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0],
        [0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]
      ];
      var image_floor3 = [
        [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
        [0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0],
        [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0]
      ];
      for(y = 0; y < image_floor1.length; y++){
        for(x = 0; x < image_floor1[y].length; x++){
          if(image_floor1[y][x] == 0){
            ctx[1].fillStyle = "#ddccaa";
          }
          if(image_floor1[y][x] == 1){
            ctx[1].fillStyle = "#884400";
          }
          ctx[1].fillRect(x*pixel, y*pixel, pixel, pixel);
          if(image_floor2[y][x] == 0){
            ctx[19].fillStyle = "#00ff00";
          }
          if(image_floor2[y][x] == 1){
            ctx[19].fillStyle = "#00cc00";
          }
          ctx[19].fillRect(x*pixel, y*pixel, pixel, pixel);
          if(image_floor3[y][x] == 0){
            ctx[20].fillStyle = "#cccccc";
          }
          if(image_floor3[y][x] == 1){
            ctx[20].fillStyle = "#bbbbbb";
          }
          if(image_floor3[y][x] == 2){
            ctx[20].fillStyle = "#aaaaaa";
          }
          ctx[20].fillRect(x*pixel, y*pixel, pixel, pixel);
        }
      }
      var image_torch1 = [
        [0,0,0,3,0,0],
        [0,0,3,3,0,0],
        [0,3,3,0,0,0],
        [0,3,4,3,0,0],
        [2,3,4,4,3,2],
        [1,2,4,4,2,1],
        [0,1,2,2,1,0],
        [0,0,1,1,0,0]
      ];
      var image_torch2 = [
        [0,0,3,0,0,0],
        [0,0,3,3,0,0],
        [0,0,3,3,0,0],
        [0,3,4,3,0,0],
        [2,3,4,4,3,2],
        [1,2,4,4,2,1],
        [0,1,2,2,1,0],
        [0,0,1,1,0,0]
      ];
      var image_torch3 = [
        [0,0,3,0,0,0],
        [0,0,3,3,0,0],
        [0,0,0,3,3,0],
        [0,0,3,4,3,0],
        [2,3,4,4,3,2],
        [1,2,4,4,2,1],
        [0,1,2,2,1,0],
        [0,0,1,1,0,0]
      ];
      for(y = 0; y < image_torch1.length; y++){
        for(x = 0; x < image_torch1[y].length; x++){
          if(image_torch1[y][x] == 1){
            ctx[2].fillStyle = "#aaaaaa";
            ctx[2].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch1[y][x] == 2){
            ctx[2].fillStyle = "#eeeeee";
            ctx[2].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch1[y][x] == 3){
            ctx[2].fillStyle = "#ff0000";
            ctx[2].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch1[y][x] == 4){
            ctx[2].fillStyle = "#ffcc00";
            ctx[2].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch2[y][x] == 1){
            ctx[3].fillStyle = "#aaaaaa";
            ctx[3].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch2[y][x] == 2){
            ctx[3].fillStyle = "#eeeeee";
            ctx[3].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch2[y][x] == 3){
            ctx[3].fillStyle = "#ff0000";
            ctx[3].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch2[y][x] == 4){
            ctx[3].fillStyle = "#ffcc00";
            ctx[3].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch3[y][x] == 1){
            ctx[4].fillStyle = "#aaaaaa";
            ctx[4].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch3[y][x] == 2){
            ctx[4].fillStyle = "#eeeeee";
            ctx[4].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch3[y][x] == 3){
            ctx[4].fillStyle = "#ff0000";
            ctx[4].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
          if(image_torch3[y][x] == 4){
            ctx[4].fillStyle = "#ffcc00";
            ctx[4].fillRect(5*pixel+x*pixel, 4*pixel+y*pixel, pixel, pixel);
          }
        }
      }
      ctx[5].translate(tileSize, 0);
      ctx[5].rotate(90*Math.PI/180);
      ctx[5].drawImage(image[2], 0, 0);
      ctx[6].translate(tileSize, 0);
      ctx[6].rotate(90*Math.PI/180);
      ctx[6].drawImage(image[3], 0, 0);
      ctx[7].translate(tileSize, 0);
      ctx[7].rotate(90*Math.PI/180);
      ctx[7].drawImage(image[4], 0, 0);
      ctx[8].translate(tileSize, 0);
      ctx[8].rotate(90*Math.PI/180);
      ctx[8].drawImage(image[5], 0, 0);
      ctx[9].translate(tileSize, 0);
      ctx[9].rotate(90*Math.PI/180);
      ctx[9].drawImage(image[6], 0, 0);
      ctx[10].translate(tileSize, 0);
      ctx[10].rotate(90*Math.PI/180);
      ctx[10].drawImage(image[7], 0, 0);
      ctx[11].translate(tileSize, 0);
      ctx[11].rotate(90*Math.PI/180);
      ctx[11].drawImage(image[8], 0, 0);
      ctx[12].translate(tileSize, 0);
      ctx[12].rotate(90*Math.PI/180);
      ctx[12].drawImage(image[9], 0, 0);
      ctx[13].translate(tileSize, 0);
      ctx[13].rotate(90*Math.PI/180);
      ctx[13].drawImage(image[10], 0, 0);
      var image_charLeft1 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,3,3,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,3,3,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
      ];
      var image_charLeft2 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,1,3,3,4,4,4,3,1,0,0,0,0],
        [0,0,0,0,1,3,3,4,4,4,3,1,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0]
      ];
      var image_charLeft3 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,1,3,4,4,4,3,3,1,0,0,0,0],
        [0,0,0,0,1,3,4,4,4,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0]
      ];
      var image_charUp1 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,1,1,4,4,4,4,4,4,1,1,0,0,0],
        [0,0,1,3,4,4,4,4,4,4,4,4,3,1,0,0],
        [0,0,1,3,4,4,4,4,4,4,4,4,3,1,0,0],
        [0,0,0,1,1,5,5,5,5,5,5,1,1,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0]
      ];
      var image_charUp2 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,1,4,4,4,4,4,4,3,3,1,0,0,0],
        [0,0,0,1,4,4,4,4,4,4,3,3,1,0,0,0],
        [0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0]
      ];
      var image_charUp3 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,1,3,3,4,4,4,4,4,4,1,0,0,0],
        [0,0,0,1,3,3,4,4,4,4,4,4,1,0,0,0],
        [0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0],
        [0,0,0,0,0,1,1,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0]
      ];
      var image_charRight1 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,3,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,3,3,3,3,1,0,0,0],
        [0,0,0,0,1,2,2,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,3,3,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,3,3,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,0,0,1,6,6,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
      ];
      var image_charRight2 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,3,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,3,3,3,3,1,0,0,0],
        [0,0,0,0,1,2,2,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,1,3,3,4,4,4,3,1,0,0,0,0],
        [0,0,0,0,1,3,3,4,4,4,3,1,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0]
      ];
      var image_charRight3 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,3,2,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,2,3,1,3,1,0,0,0],
        [0,0,0,1,2,2,2,2,3,3,3,3,1,0,0,0],
        [0,0,0,0,1,2,2,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,1,3,4,4,4,3,3,1,0,0,0,0],
        [0,0,0,0,1,3,4,4,4,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,4,4,4,4,1,0,0,0,0,0],
        [0,0,0,0,0,1,5,5,5,5,1,0,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0]
      ];
      var image_charDown1 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,3,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,3,1,3,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,1,3,3,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,3,3,3,3,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,3,3,4,4,1,0,0,0,0],
        [0,0,0,1,1,4,4,4,4,4,4,1,1,0,0,0],
        [0,0,1,3,3,4,4,4,4,4,4,3,3,1,0,0],
        [0,0,1,3,3,4,4,4,4,4,4,3,3,1,0,0],
        [0,0,0,1,1,5,5,5,5,5,5,1,1,0,0,0],
        [0,0,0,0,1,6,6,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0]
      ];
      var image_charDown2 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,3,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,3,1,3,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,1,3,3,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,3,3,3,3,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,3,3,4,4,1,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,1,3,4,4,4,4,4,3,3,1,0,0,0],
        [0,0,0,1,3,4,4,4,4,4,3,3,1,0,0,0],
        [0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0],
        [0,0,0,0,1,6,6,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0]
      ];
      var image_charDown3 = [
        [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0],
        [0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,2,3,2,2,2,2,2,1,0,0,0],
        [0,0,0,1,2,3,1,3,2,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,1,3,3,2,2,2,1,0,0,0],
        [0,0,0,1,3,3,3,3,3,3,2,2,1,0,0,0],
        [0,0,0,0,1,3,3,3,3,3,3,1,0,0,0,0],
        [0,0,0,0,0,1,3,3,3,3,1,0,0,0,0,0],
        [0,0,0,0,1,4,4,3,3,4,4,1,0,0,0,0],
        [0,0,0,0,1,4,4,4,4,4,4,1,0,0,0,0],
        [0,0,0,1,3,3,4,4,4,4,4,3,1,0,0,0],
        [0,0,0,1,3,3,4,4,4,4,4,3,1,0,0,0],
        [0,0,0,0,1,5,5,5,5,5,5,1,0,0,0,0],
        [0,0,0,0,0,1,1,1,1,6,6,1,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0]
      ];
      for(y = 0; y < image_charLeft1.length; y++){
        for(x = 0; x < image_charLeft1[y].length; x++){
          if(image_charLeft1[y][x] == 1){
            ctx[16].fillStyle = "#000000";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft1[y][x] == 2){
            ctx[16].fillStyle = "#ffff00";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft1[y][x] == 3){
            ctx[16].fillStyle = "#ffccaa";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft1[y][x] == 4){
            ctx[16].fillStyle = "#ffaa00";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft1[y][x] == 5){
            ctx[16].fillStyle = "#dddddd";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft1[y][x] == 6){
            ctx[16].fillStyle = "#884400";
            ctx[16].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 1){
            ctx[22].fillStyle = "#000000";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 2){
            ctx[22].fillStyle = "#ffff00";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 3){
            ctx[22].fillStyle = "#ffccaa";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 4){
            ctx[22].fillStyle = "#ffaa00";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 5){
            ctx[22].fillStyle = "#dddddd";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft2[y][x] == 6){
            ctx[22].fillStyle = "#884400";
            ctx[22].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 1){
            ctx[23].fillStyle = "#000000";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 2){
            ctx[23].fillStyle = "#ffff00";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 3){
            ctx[23].fillStyle = "#ffccaa";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 4){
            ctx[23].fillStyle = "#ffaa00";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 5){
            ctx[23].fillStyle = "#dddddd";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charLeft3[y][x] == 6){
            ctx[23].fillStyle = "#884400";
            ctx[23].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 1){
            ctx[15].fillStyle = "#000000";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 2){
            ctx[15].fillStyle = "#ffff00";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 3){
            ctx[15].fillStyle = "#ffccaa";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 4){
            ctx[15].fillStyle = "#ffaa00";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 5){
            ctx[15].fillStyle = "#dddddd";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp1[y][x] == 6){
            ctx[15].fillStyle = "#884400";
            ctx[15].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 1){
            ctx[24].fillStyle = "#000000";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 2){
            ctx[24].fillStyle = "#ffff00";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 3){
            ctx[24].fillStyle = "#ffccaa";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 4){
            ctx[24].fillStyle = "#ffaa00";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 5){
            ctx[24].fillStyle = "#dddddd";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp2[y][x] == 6){
            ctx[24].fillStyle = "#884400";
            ctx[24].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 1){
            ctx[25].fillStyle = "#000000";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 2){
            ctx[25].fillStyle = "#ffff00";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 3){
            ctx[25].fillStyle = "#ffccaa";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 4){
            ctx[25].fillStyle = "#ffaa00";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 5){
            ctx[25].fillStyle = "#dddddd";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charUp3[y][x] == 6){
            ctx[25].fillStyle = "#884400";
            ctx[25].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 1){
            ctx[17].fillStyle = "#000000";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 2){
            ctx[17].fillStyle = "#ffff00";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 3){
            ctx[17].fillStyle = "#ffccaa";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 4){
            ctx[17].fillStyle = "#ffaa00";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 5){
            ctx[17].fillStyle = "#dddddd";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight1[y][x] == 6){
            ctx[17].fillStyle = "#884400";
            ctx[17].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 1){
            ctx[26].fillStyle = "#000000";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 2){
            ctx[26].fillStyle = "#ffff00";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 3){
            ctx[26].fillStyle = "#ffccaa";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 4){
            ctx[26].fillStyle = "#ffaa00";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 5){
            ctx[26].fillStyle = "#dddddd";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight2[y][x] == 6){
            ctx[26].fillStyle = "#884400";
            ctx[26].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 1){
            ctx[27].fillStyle = "#000000";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 2){
            ctx[27].fillStyle = "#ffff00";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 3){
            ctx[27].fillStyle = "#ffccaa";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 4){
            ctx[27].fillStyle = "#ffaa00";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 5){
            ctx[27].fillStyle = "#dddddd";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charRight3[y][x] == 6){
            ctx[27].fillStyle = "#884400";
            ctx[27].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 1){
            ctx[14].fillStyle = "#000000";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 2){
            ctx[14].fillStyle = "#ffff00";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 3){
            ctx[14].fillStyle = "#ffccaa";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 4){
            ctx[14].fillStyle = "#ffaa00";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 5){
            ctx[14].fillStyle = "#dddddd";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown1[y][x] == 6){
            ctx[14].fillStyle = "#884400";
            ctx[14].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 1){
            ctx[28].fillStyle = "#000000";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 2){
            ctx[28].fillStyle = "#ffff00";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 3){
            ctx[28].fillStyle = "#ffccaa";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 4){
            ctx[28].fillStyle = "#ffaa00";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 5){
            ctx[28].fillStyle = "#dddddd";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown2[y][x] == 6){
            ctx[28].fillStyle = "#884400";
            ctx[28].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 1){
            ctx[29].fillStyle = "#000000";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 2){
            ctx[29].fillStyle = "#ffff00";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 3){
            ctx[29].fillStyle = "#ffccaa";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 4){
            ctx[29].fillStyle = "#ffaa00";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 5){
            ctx[29].fillStyle = "#dddddd";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_charDown3[y][x] == 6){
            ctx[29].fillStyle = "#884400";
            ctx[29].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_stamina = [
        [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
        [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
        [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1],
        [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0]
      ];
      for(y = 0; y < image_stamina.length; y++){
        for(x = 0; x < image_stamina[y].length; x++){
          if(image_stamina[y][x] == 1){
            ctx[21].fillStyle = "#ffffff";
            ctx[21].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_stamina[y][x] == 2){
            ctx[21].fillStyle = "#000000";
            ctx[21].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      ctx[18].fillStyle = "#000000";
      ctx[18].fillRect(0, 0, tileSize, tileSize);
      var image_case = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
        [1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1],
        [1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1],
        [1,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1],
        [1,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1],
        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
        [1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1],
        [1,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1],
        [1,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1],
        [1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1],
        [1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1],
        [1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
      ];
      for(y = 0; y < image_case.length; y++){
        for(x = 0; x < image_case[y].length; x++){
          if(image_case[y][x] == 0){
            ctx[30].fillStyle = "#000000";
          }
          if(image_case[y][x] == 1){
            ctx[30].fillStyle = "#aa00aa";
          }
          ctx[30].fillRect(x*pixel, y*pixel, pixel, pixel);
        }
      }
      var image_cursor1 = [
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0],
        [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
      ];
      for(y = 0; y < image_cursor1.length; y++){
        for(x = 0; x < image_cursor1[y].length; x++){
          if(image_cursor1[y][x] == 1){
            ctx[31].fillStyle = "#ffffff";
            ctx[31].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_title = [
        [1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0],
        [1,2,1,0,0,1,2,1,0,0,0,1,0,0,0,1,2,1,0,0,0,1,0,0,0,1,2,1,0,0,1,2,1,0,1,2,1,0,0,0,0,0,1,0,1,2,1,0,1,0,0,1,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,1,1,2,1,0,1,1,1,0,0,0,1,0,1,2,1,0,0,1,0,1,1,0,0,0,0,1,0,1,2,1,0,0,0,0,1,1,1,0,0,0],
        [1,2,1,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,2,1,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,1,0,1,2,1,0,1,2,1,0,0,0,1,0,1,2,1,0,0,0,0,1,2,1,0,0,0,1,0,1,2,1,0,0,0,0,1,2,1,0,0,0],
        [1,2,1,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,2,1,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,1,2,1,0,0,0,1,1,2,1,0,0,1,0,1,2,1,0,1,1,2,1,0,0,1,0,1,2,1,1,1,1,0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,1,0,1,2,1,0,0],
        [1,2,1,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,2,1,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,1,0,1,2,1,0,0,0,1,0,1,2,1,1,0,0,1,2,1,0,1,0,1,2,1,0,1,0,1,2,1,0,0,1,0,0,0,1,2,1,0,0,0,1,2,1,0,0,0,1,0,1,2,1,0,0],
        [1,2,1,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,2,1,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0,0,1,2,1,0,0,1,2,1,0,1,0,0,1,2,1,1,0,1,2,1,0,0,0,0,0,0,0,1,2,1,0,0,1,2,1,0,0,1,0,0,0,1,2,1,0],
        [1,2,1,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,0,0,0,0,0,1,2,1,0,1,2,1,1,0,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,0,1,2,1,0,0,0,0,0,0,1,0,0,0,1,2,1,0,0,1,0,0,0,1,0,0,0,1,2,1,0,1,0,0,0,1,2,1,0,1,2,1,0,0,0,0,0,0,0,0,1,2,1,0,1,2,1,0,0,1,0,0,0,1,2,1,0],
        [1,2,1,0,0,1,2,1,0,0,0,1,0,0,0,1,2,1,0,0,0,1,0,0,0,1,2,1,0,0,1,2,1,0,0,0,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,1,0,0,0,1,2,1,0,0,0,0,0,0,1,1,1,1,1,1,1,2,1,0,1,0,0,0,1,0,0,0,1,2,1,0,1,0,0,0,1,1,1,0,1,2,1,0,0,0,0,1,0,0,0,0,1,1,0,1,2,1,0,1,1,1,1,1,1,1,2,1],
        [1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,1,1,1]
      ];
      for(y = 0; y < image_title.length; y++){
        for(x = 0; x < image_title[y].length; x++){
          if(image_title[y][x] == 1){
            ctx[32].fillStyle = "#000000";
            ctx[32].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
          if(image_title[y][x] == 2){
            ctx[32].fillStyle = "#ffffff";
            ctx[32].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_start = [
        [0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],
        [0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,1,0,0],
        [0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],
        [0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],
        [1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],
        [0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0,0],
      ];
      for(y = 0; y < image_start.length; y++){
        for(x = 0; x < image_start[y].length; x++){
          if(image_start[y][x] == 1){
            ctx[33].fillStyle = "#ffffff";
            ctx[33].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_load = [
        [1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,1,1,1,0],
        [1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1],
        [1,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,1],
        [1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1],
        [1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1],
        [1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1],
        [1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,0],
      ];
      for(y = 0; y < image_load.length; y++){
        for(x = 0; x < image_load[y].length; x++){
          if(image_load[y][x] == 1){
            ctx[34].fillStyle = "#ffffff";
            ctx[34].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_quit = [
        [0,1,1,1,0,0,1,0,0,0,1,0,1,1,1,0,1,1,1,1,1],
        [1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0],
        [1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0],
        [1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0],
        [1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0],
        [1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0],
        [0,1,1,0,1,0,0,1,1,1,0,0,1,1,1,0,0,0,1,0,0],
      ];
      for(y = 0; y < image_quit.length; y++){
        for(x = 0; x < image_quit[y].length; x++){
          if(image_quit[y][x] == 1){
            ctx[35].fillStyle = "#ffffff";
            ctx[35].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var image_cursor2 = [
        [1,0,0,0,0,0,0],
        [1,1,1,0,0,0,0],
        [1,1,1,1,1,0,0],
        [1,1,1,1,1,1,1],
        [1,1,1,1,1,0,0],
        [1,1,1,0,0,0,0],
        [1,0,0,0,0,0,0]
      ];
      for(y = 0; y < image_cursor2.length; y++){
        for(x = 0; x < image_cursor2[y].length; x++){
          if(image_cursor2[y][x] == 1){
            ctx[36].fillStyle = "#ffffff";
            ctx[36].fillRect(x*pixel, y*pixel, pixel, pixel);
          }
        }
      }
      var wall = [image[0]];
      var floor = [image[1], image[19], image[20]];
      function map_test(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1],
          [1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
          [1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map1(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map2(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map3(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map4(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map5(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,0,0,1,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map6(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,1],
          [1,1,1,1,0,0,0,0,0,0,1],
          [1,1,1,1,0,0,0,0,0,0,1],
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map7(){
        this.wall = 0;
        this.floor = 0;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map8(){
        this.wall = 0;
        this.floor = 1;
        this.dark = false;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
          [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function map9(){
        this.wall = 0;
        this.floor = 2;
        this.dark = true;
        this.level = [
          [1,1,1,1,1,1,1,1,1,1,1],
          [1,1,1,0,0,0,0,0,1,1,1],
          [1,1,0,0,0,0,0,0,0,1,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,0,0,0,0,0,0,0,0,0,1],
          [1,1,0,0,0,0,0,0,0,1,1],
          [1,1,1,0,0,0,0,0,1,1,1],
          [1,1,1,1,1,1,1,1,1,1,1]
        ];
      }
      function torches(){
        this.XPos = 0;
        this.YPos = 0;
        this.map = 0;
        this.direction = 0;
        this.frame = 0;
        this.sprite = [
          [image[5], image[5], image[6], image[6], image[7], image[7]],//left
          [image[8], image[8], image[9], image[9], image[10], image[10]],//up
          [image[11], image[11], image[12], image[12], image[13], image[13]],//right
          [image[2], image[2], image[3], image[3], image[4], image[4]]//down
        ];
        this.update = function(){
          if(m == this.map){
            context.drawImage(this.sprite[this.direction][this.frame], this.XPos+scrollXMap, this.YPos+scrollYMap);
            this.frame = (this.frame+1)%this.sprite[this.direction].length;
            maskCtx.beginPath();
            maskCtx.arc(this.XPos+tileSize/2+scrollXMap, this.YPos+tileSize/2+scrollYMap, 2.5*tileSize, 0, Math.PI*2, false);
            maskCtx.fill();
            maskCtx.closePath();
          }
        }
      }
      function doors(){
        this.XPos = 0;
        this.YPos = 0;
        this.map = 0;
        this.newXPos = 0;
        this.newYPos = 0;
        this.newMap = 0;
        this.type = 0;
        this.sprite = [image[18]];
        this.update = function(){
          if(m == this.map){
            context.drawImage(this.sprite[this.type], this.XPos+scrollXMap, this.YPos+scrollYMap);
          }
        }
        this.detection = function(){
          if(m == this.map){
            if(hero.direction == "left" && hero.XPos == this.XPos+tileSize && hero.YPos >= this.YPos-0.5*tileSize && hero.YPos <= this.YPos+1.5*tileSize){
              transition = true;
              newXPos = this.newXPos;
              newYPos = this.newYPos;
              newMap = this.newMap;
              tr = 20;
            }
            if(hero.direction == "up" && hero.YPos == this.YPos+tileSize && hero.XPos >= this.XPos-0.5*tileSize && hero.XPos <= this.XPos+1.5*tileSize){
              transition = true;
              newXPos = this.newXPos;
              newYPos = this.newYPos;
              newMap = this.newMap;
              tr = 20;
            }
            if(hero.direction == "right" && hero.XPos == this.XPos-tileSize && hero.YPos >= this.YPos-0.5*tileSize && hero.YPos <= this.YPos+1.5*tileSize){
              transition = true;
              newXPos = this.newXPos;
              newYPos = this.newYPos;
              newMap = this.newMap;
              tr = 20;
            }
            if(hero.direction == "down" && hero.YPos == this.YPos-tileSize && hero.XPos >= this.XPos-0.5*tileSize && hero.XPos <= this.XPos+1.5*tileSize){
              transition = true;
              newXPos = this.newXPos;
              newYPos = this.newYPos;
              newMap = this.newMap;
              tr = 20;
            }
          }
        }
      }
      function bar_life(){
        this.XPos = pixel;
        this.YPos = pixel;
        this.life = 4;
        this.update = function(){
          context.drawImage(image[21], this.XPos, this.YPos);
          context.fillStyle = "#00ff00";
          context.fillRect(this.XPos+pixel, this.YPos+pixel, this.life*4*pixel, 2*pixel);
        }
      }
      function bar_stamina(){
        this.XPos = pixel;
        this.YPos = 6*pixel;
        this.stamina = 160;
        this.update = function(){
          context.drawImage(image[21], this.XPos, this.YPos);
          context.fillStyle = "#0000ff";
          context.fillRect(this.XPos+pixel, this.YPos+pixel, this.stamina/10*pixel, 2*pixel);
        }
      }
      function equiped_item(){
        this.XPos = 10*tileSize-pixel;
        this.YPos = pixel;
        this.update = function(){
          context.drawImage(image[30], this.XPos, this.YPos);
        }
      }
      function hero(){
        this.XPos = 5*tileSize;
        this.YPos = 4*tileSize;
        this.movementSpeed = 6;
        this.dir = 3;
        this.direction = "down";
        this.frame = 0;
        this.frameSpeed = 1;
        this.sprite = [
          [image[16], image[16], image[16], image[16], image[22], image[22], image[22], image[22], image[16], image[16], image[16], image[16], image[23], image[23], image[23], image[23]],//left
          [image[15], image[15], image[15], image[15], image[24], image[24], image[24], image[24], image[15], image[15], image[15], image[15], image[25], image[25], image[25], image[25]],//up
          [image[17], image[17], image[17], image[17], image[26], image[26], image[26], image[26], image[17], image[17], image[17], image[17], image[27], image[27], image[27], image[27]],//right
          [image[14], image[14], image[14], image[14], image[28], image[28], image[28], image[28], image[14], image[14], image[14], image[14], image[29], image[29], image[29], image[29]]//down
        ];
        this.update = function(){
          this.XSpeed = 0;
          this.YSpeed = 0;
          if(leftPressed && !transition && !inventory){
            this.XSpeed -= this.movementSpeed;
            this.dir = 0;
            this.direction = "left";
          }
          if(upPressed && !transition && !inventory){
            this.YSpeed -= this.movementSpeed;
            this.dir = 1;
            this.direction = "up";
          }
          if(rightPressed && !transition && !inventory){
            this.XSpeed = this.movementSpeed;
            this.dir = 2;
            this.direction = "right";
          }
          if(downPressed && !transition && !inventory){
            this.YSpeed = this.movementSpeed;
            this.dir = 3;
            this.direction = "down";
          }
          this.XPos += this.XSpeed;
          this.YPos += this.YSpeed;
          this.baseCol = Math.floor(this.XPos/tileSize);
          this.baseRow = Math.floor(this.YPos/tileSize);
          this.rowOverlap = this.YPos%tileSize;
          if(this.XSpeed > 0){
            if((map[m].level[this.baseRow][this.baseCol+1] && !map[m].level[this.baseRow][this.baseCol]) || (map[m].level[this.baseRow+1][this.BaseCol+1] && !map[m].level[this.baseRow+1][this.baseRow] && this.rowOverlap)){
              this.XPos = this.baseCol*tileSize;
            }
          }
          if(this.XSpeed < 0){
            if((!map[m].level[this.baseRow][this.baseCol+1] && map[m].level[this.baseRow][this.baseCol]) || (!map[m].level[this.baseRow+1][this.baseCol+1] && map[m].level[this.baseRow+1][this.baseRow] && this.rowlOverlap)){
              this.XPos = (this.baseCol+1)*tileSize;
            }
          }
          this.baseCol = Math.floor(this.XPos/tileSize);
          this.baseRow = Math.floor(this.YPos/tileSize);
          this.colOverlap = this.XPos%tileSize;
          if(this.YSpeed > 0){
            if((map[m].level[this.baseRow+1][this.baseCol] && !map[m].level[this.baseRow][this.baseCol]) || (map[m].level[this.baseRow+1][this.baseCol+1] && !map[m].level[this.baseRow][this.baseCol+1] && this.colOverlap)){
              this.YPos = this.baseRow*tileSize;
            }
          }
          if(this.YSpeed < 0){
            if((!map[m].level[this.baseRow+1][this.baseCol] && map[m].level[this.baseRow][this.baseCol]) || (!map[m].level[this.baseRow+1][this.baseCol+1] && map[m].level[this.baseRow][this.baseCol+1] && this.colOverlap)){
              this.YPos = (this.baseRow+1)*tileSize;
            }
          }
          scrollXMap = 5*tileSize-this.XPos;
          scrollYMap = 4*tileSize-this.YPos;
          if(scrollXMap > 0){
            scrollXMap = 0;
          }
          if(scrollXMap < 11*tileSize-map[m].level[0].length*tileSize){
            scrollXMap = 11*tileSize-map[m].level[0].length*tileSize;
          }
          if(scrollYMap > 0){
            scrollYMap = 0;
          }
          if(scrollYMap < 9*tileSize-map[m].level.length*tileSize){
            scrollYMap = 9*tileSize-map[m].level.length*tileSize;
          }
          context.drawImage(this.sprite[this.dir][this.frame], this.XPos+scrollXMap, this.YPos+scrollYMap);
          if((leftPressed || upPressed || rightPressed || downPressed) && !inventory){
            this.frame = (this.frame+this.frameSpeed)%this.sprite[this.dir].length;
          }
          else{
            this.frame = 0;
          }
          maskCtx.beginPath();
          maskCtx.arc(this.XPos+tileSize/2+scrollXMap, this.YPos+tileSize/2+scrollYMap, tileSize, 0, Math.PI*2, false);
          maskCtx.fill();
          maskCtx.closePath();
        }
      }
      map[0] = new map_test();
      torch[0] = new torches();
      torch[0].XPos = 5*tileSize
      torch[0].direction = 3;
      torch[1] = new torches();
      torch[1].XPos = 16*tileSize;
      torch[1].direction = 3;
      torch[2] = new torches();
      torch[2].XPos = 21*tileSize;
      torch[2].YPos = 3*tileSize;
      torch[9] = new torches();
      torch[9].XPos = 21*tileSize;
      torch[9].YPos = 5*tileSize;
      torch[3] = new torches();
      torch[3].XPos = 5*tileSize;
      torch[3].YPos = 8*tileSize;
      torch[3].direction = 1;
      torch[4] = new torches();
      torch[4].XPos = 16*tileSize;
      torch[4].YPos = 8*tileSize;
      torch[4].direction = 1;
      torch[5] = new torches();
      torch[5].YPos = 5*tileSize;
      torch[5].direction = 2;
      torch[8] = new torches();
      torch[8].YPos = 3*tileSize;
      torch[8].direction = 2;
      torch[6] = new torches();
      torch[6].XPos = 10.5*tileSize;
      torch[6].YPos = 2*tileSize;
      torch[6].direction = 3;
      torch[7] = new torches();
      torch[7].XPos = 10.5*tileSize;
      torch[7].YPos = 6*tileSize;
      torch[7].direction = 1;
      door[0] = new doors();
      door[0].YPos = 4*tileSize;
      door[0].newXPos = 20*tileSize;
      door[0].newYPos = 4*tileSize;
      door[1] = new doors();
      door[1].XPos = 21*tileSize;
      door[1].YPos = 4*tileSize;
      door[1].newXPos = tileSize;
      door[1].newYPos = 4*tileSize;
      map[1] = new map1();
      door[2] = new doors();
      door[2].XPos = 5*tileSize;
      door[2].YPos = 8*tileSize;
      door[2].map = 1;
      door[2].newXPos = 5*tileSize;
      door[2].newYPos = tileSize;
      door[2].newMap = 2;
      map[2] = new map2();
      torch[10] = new torches();
      torch[10].XPos = 4*tileSize;
      torch[10].map = 2;
      torch[10].direction = 3;
      torch[11] = new torches();
      torch[11].XPos = 6*tileSize;
      torch[11].map = 2;
      torch[11].direction = 3;
      torch[12] = new torches();
      torch[12].XPos = 15*tileSize;
      torch[12].map = 2;
      torch[12].direction = 3;
      torch[13] = new torches();
      torch[13].XPos = 17*tileSize;
      torch[13].map = 2;
      torch[13].direction = 3;
      torch[14] = new torches();
      torch[14].XPos = 26*tileSize;
      torch[14].map = 2;
      torch[14].direction = 3;
      torch[15] = new torches();
      torch[15].XPos = 28*tileSize;
      torch[15].map = 2;
      torch[15].direction = 3;
      torch[16] = new torches();
      torch[16].YPos = 12*tileSize;
      torch[16].map = 2;
      torch[16].direction = 2;
      torch[17] = new torches();
      torch[17].YPos = 14*tileSize;
      torch[17].map = 2;
      torch[17].direction = 2;
      door[3] = new doors();
      door[3].XPos = 5*tileSize;
      door[3].map = 2;
      door[3].newXPos = 5*tileSize;
      door[3].newYPos = 7*tileSize;
      door[3].newMap = 1;
      door[4] = new doors();
      door[4].XPos = 27*tileSize;
      door[4].map = 2;
      door[4].newXPos = 5*tileSize;
      door[4].newYPos = 7*tileSize;
      door[4].newMap = 3;
      door[10] = new doors();
      door[10].YPos = 13*tileSize;
      door[10].map = 2;
      door[10].newXPos = 9*tileSize;
      door[10].newYPos = 22*tileSize;
      door[10].newMap = 6;
      door[21] = new doors();
      door[21].XPos = 16*tileSize;
      door[21].map = 2;
      door[21].newXPos = 5*tileSize;
      door[21].newYPos = 7*tileSize;
      door[21].newMap = 9;
      map[3] = new map3();
      torch[18] = new torches();
      torch[18].XPos = 4*tileSize;
      torch[18].YPos = 8*tileSize;
      torch[18].map = 3;
      torch[18].direction = 1;
      torch[19] = new torches();
      torch[19].XPos = 6*tileSize;
      torch[19].YPos = 8*tileSize;
      torch[19].map = 3;
      torch[19].direction = 1;
      torch[20] = new torches();
      torch[20].XPos = 10*tileSize;
      torch[20].YPos = 3*tileSize;
      torch[20].map = 3;
      torch[21] = new torches();
      torch[21].XPos = 10*tileSize;
      torch[21].YPos = 5*tileSize;
      torch[21].map = 3;
      door[5] = new doors();
      door[5].XPos = 5*tileSize;
      door[5].YPos = 8*tileSize;
      door[5].map = 3;
      door[5].newXPos = 27*tileSize;
      door[5].newYPos = tileSize;
      door[5].newMap = 2;
      door[6] = new doors();
      door[6].XPos = 10*tileSize;
      door[6].YPos = 4*tileSize;
      door[6].map = 3;
      door[6].newXPos = tileSize;
      door[6].newYPos = 4*tileSize;
      door[6].newMap = 4;
      map[4] = new map4();
      torch[22] = new torches();
      torch[22].YPos = 3*tileSize;
      torch[22].map = 4;
      torch[22].direction = 2;
      torch[23] = new torches();
      torch[23].YPos = 5*tileSize;
      torch[23].map = 4;
      torch[23].direction = 2;
      torch[24] = new torches();
      torch[24].XPos = 4*tileSize;
      torch[24].map = 4;
      torch[24].direction = 3;
      torch[25] = new torches();
      torch[25].XPos = 6*tileSize;
      torch[25].map = 4;
      torch[25].direction = 3;
      torch[26] = new torches();
      torch[26].XPos = 4*tileSize;
      torch[26].YPos = 17*tileSize;
      torch[26].map = 4;
      torch[26].direction = 1;
      torch[27] = new torches();
      torch[27].XPos = 6*tileSize;
      torch[27].YPos = 17*tileSize;
      torch[27].map = 4;
      torch[27].direction = 1;
      door[7] = new doors();
      door[7].YPos = 4*tileSize;
      door[7].map = 4;
      door[7].newXPos = 9*tileSize;
      door[7].newYPos = 4*tileSize;
      door[7].newMap = 3;
      door[8] = new doors();
      door[8].XPos = 5*tileSize;
      door[8].YPos = 17*tileSize;
      door[8].map = 4;
      door[8].newXPos = 5*tileSize;
      door[8].newYPos = tileSize;
      door[8].newMap = 5;
      door[20] = new doors();
      door[20].XPos = 5*tileSize;
      door[20].map = 4;
      door[20].newXPos = 49*tileSize;
      door[20].newYPos = 16*tileSize;
      door[20].newMap = 7;
      map[5] = new map5();
      torch[28] = new torches();
      torch[28].XPos = 4*tileSize;
      torch[28].map = 5;
      torch[28].direction = 3;
      torch[29] = new torches();
      torch[29].XPos = 6*tileSize;
      torch[29].map = 5;
      torch[29].direction = 3;
      door[9] = new doors();
      door[9].XPos = 5*tileSize;
      door[9].map = 5;
      door[9].newXPos = 5*tileSize;
      door[9].newYPos = 16*tileSize;
      door[9].newMap = 4;
      map[6] = new map6();
      torch[30] = new torches();
      torch[30].XPos = 10*tileSize;
      torch[30].YPos = 21*tileSize;
      torch[30].map = 6;
      torch[31] = new torches();
      torch[31].XPos = 10*tileSize;
      torch[31].YPos = 23*tileSize;
      torch[31].map = 6;
      torch[32] = new torches();
      torch[32].XPos = 4*tileSize;
      torch[32].map = 6;
      torch[32].direction = 3;
      torch[33] = new torches();
      torch[33].XPos = 6*tileSize;
      torch[33].map = 6;
      torch[33].direction = 3;
      door[11] = new doors();
      door[11].XPos = 10*tileSize;
      door[11].YPos = 22*tileSize;
      door[11].map = 6;
      door[11].newXPos = tileSize;
      door[11].newYPos = 13*tileSize;
      door[11].newMap = 2;
      door[12] = new doors();
      door[12].XPos = 5*tileSize;
      door[12].map = 6;
      door[12].newXPos = 5*tileSize;
      door[12].newYPos = 16*tileSize;
      door[12].newMap = 7;
      map[7] = new map7();
      torch[34] = new torches();
      torch[34].XPos = 4*tileSize;
      torch[34].YPos = 17*tileSize;
      torch[34].map = 7;
      torch[34].direction = 1;
      torch[35] = new torches();
      torch[35].XPos = 6*tileSize;
      torch[35].YPos = 17*tileSize;
      torch[35].map = 7;
      torch[35].direction = 1;
      torch[36] = new torches();
      torch[36].XPos = 10*tileSize;
      torch[36].YPos = 12*tileSize;
      torch[36].map = 7;
      torch[37] = new torches();
      torch[37].XPos = 10*tileSize;
      torch[37].YPos = 14*tileSize;
      torch[37].map = 7;
      torch[38] = new torches();
      torch[38].XPos = 48*tileSize;
      torch[38].YPos = 17*tileSize;
      torch[38].map = 7;
      torch[38].direction = 1;
      torch[39] = new torches();
      torch[39].XPos = 50*tileSize;
      torch[39].YPos = 17*tileSize;
      torch[39].map = 7;
      torch[39].direction = 1;
      torch[40] = new torches();
      torch[40].XPos = 44*tileSize;
      torch[40].YPos = 12*tileSize;
      torch[40].map = 7;
      torch[40].direction = 2;
      torch[41] = new torches();
      torch[41].XPos = 44*tileSize;
      torch[41].YPos = 14*tileSize;
      torch[41].map = 7;
      torch[41].direction = 2;
      door[13] = new doors();
      door[13].XPos = 5*tileSize;
      door[13].YPos = 17*tileSize;
      door[13].map = 7;
      door[13].newXPos = 5*tileSize;
      door[13].newYPos = tileSize;
      door[13].newMap = 6;
      door[14] = new doors();
      door[14].XPos = 10*tileSize;
      door[14].YPos = 13*tileSize;
      door[14].map = 7;
      door[14].newXPos = tileSize;
      door[14].newYPos = 4*tileSize;
      door[14].newMap = 8;
      door[15] = new doors();
      door[15].XPos = 44*tileSize;
      door[15].YPos = 13*tileSize;
      door[15].map = 7;
      door[15].newXPos = 31*tileSize;
      door[15].newYPos = 4*tileSize;
      door[15].newMap = 8;
      door[16] = new doors();
      door[16].XPos = 49*tileSize;
      door[16].YPos = 17*tileSize;
      door[16].map = 7;
      door[16].newXPos = 5*tileSize;
      door[16].newYPos = tileSize;
      door[16].newMap = 4;
      map[8] = new map8();
      door[17] = new doors();
      door[17].YPos = 4*tileSize;
      door[17].map = 8;
      door[17].newXPos = 9*tileSize;
      door[17].newYPos = 13*tileSize;
      door[17].newMap = 7;
      door[18] = new doors();
      door[18].XPos = 32*tileSize;
      door[18].YPos = 4*tileSize;
      door[18].map = 8;
      door[18].newXPos = 45*tileSize;
      door[18].newYPos = 13*tileSize;
      door[18].newMap = 7;
      map[9] = new map9();
      door[19] = new doors();
      door[19].XPos = 5*tileSize;
      door[19].YPos = 8*tileSize;
      door[19].map = 9;
      door[19].newXPos = 16*tileSize;
      door[19].newYPos = tileSize;
      door[19].newMap = 2;
      var hero = new hero();
      var bar_stamina = new bar_stamina();
      var bar_life = new bar_life();
      var equiped_item = new equiped_item();
      setInterval(function(){
        renderLevel();
        regen();
      }, 1000/FPS);
      document.addEventListener("keydown", function(e){
        //alert(e.keyCode);
        if(e.keyCode == 81 && !upPressed && !rightPressed && !downPressed){
          leftPressed = true;
        }
        if(e.keyCode == 90 && !leftPressed && !rightPressed && !downPressed){
          upPressed = true;
        }
        if(e.keyCode == 68 && !leftPressed && !upPressed && !downPressed){
          rightPressed = true;
        }
        if(e.keyCode == 83 && !leftPressed && !upPressed && !rightPressed){
          downPressed = true;
        }
        if(e.keyCode == 69){
          if(!inventory){
            detection();
          }
        }
        if(e.keyCode == 65){
          alert("x = "+Math.floor(hero.XPos/tileSize)+" y = "+Math.floor(hero.YPos/tileSize));
        }
        if(e.keyCode == 13){
          if(inventory && !title){
            inventory = false;
          }
          else if(!title){
            inventory = true;
          }
          else if(title && titleY == 0){
            title = false;
          }
          else if(title && titleY == 1){}
          else if(title && titleY == 2){
            window.close();
          }
        }
      });
      document.addEventListener("keydown", function(e){
        if(e.keyCode == 16 && bar_stamina.stamina > 0){
          shiftPressed = true;
        }
      });
      document.addEventListener("keyup", function(e){
        if(e.keyCode == 81){
          leftPressed = false;
        }
        if(e.keyCode == 90){
          upPressed = false;
        }
        if(e.keyCode == 68){
          rightPressed = false;
        }
        if(e.keyCode == 83){
          downPressed = false;
        }
      });
      document.addEventListener("keyup", function(e){
        if(e.keyCode == 16){
          shiftPressed = false;
        }
      });
      function renderLevel(){
        context.fillStyle = "#000000";
        context.fillRect(0, 0, canvas.width, canvas.height);
        if(title){
          context.fillStyle = "#ff00ff";
          context.fillRect(0, 0, canvas.width, canvas.height);
          context.drawImage(image[32], 1.5*tileSize, 2*tileSize);
          context.drawImage(image[33], 4.5*tileSize, 4*tileSize);
          context.drawImage(image[34], 4.5*tileSize+3*pixel, 5*tileSize);
          context.drawImage(image[35], 4.5*tileSize+3*pixel, 6*tileSize);
          if(upPressed && titleY > 0){
            if(titleCursor){
              titleCursor = false;
            }
            else{
              titleY -= 1;
              titleCursor = true;
            }
          }
          if(downPressed && titleY < 2){
            if(titleCursor){
              titleCursor = false;
            }
            else{
              titleY += 1;
              titleCursor = true;
            }
          }
          context.drawImage(image[36], 4*tileSize, 4*tileSize+titleY*tileSize);
          return;
        }
        for(y = 0; y < map[m].level.length; y++){
          for(x = 0; x < map[m].level[y].length; x++){
            if(map[m].level[y][x] == 0){
              context.drawImage(floor[map[m].floor], x*tileSize+scrollXMap, y*tileSize+scrollYMap);
            }
            if(map[m].level[y][x] == 1){
              context.drawImage(wall[map[m].wall], x*tileSize+scrollXMap, y*tileSize+scrollYMap);
            }
          }
        }
        maskCtx.fillStyle = "#000000";
        maskCtx.fillRect(0, 0, canvas.width, canvas.height);
        maskCtx.globalCompositeOperation = "destination-out";
        hero.update();
        for(t = 0; t < torch.length; t++){
          torch[t].update();
        }
        for(d = 0; d < door.length; d++){
          door[d].update();
        }
        maskCtx.globalCompositeOperation = "source-over";
        if(map[m].dark){
          context.drawImage(mask, 0, 0);
          context.fillStyle = "rgba(0, 0, 0, 0.25)";
          context.fillRect(0, 0, canvas.width, canvas.height);
        }
        else{
          context.fillStyle = "rgba(0, 0, 0, 0.25)";
          context.fillRect(0, 0, canvas.width, canvas.height);
        }
        transitions();
        bar_life.update();
        bar_stamina.update();
        equiped_item.update();
        if(inventory){
          for(y = 0; y < 5 ; y++){
            for(x = 0; x < 7; x++){
              context.drawImage(image[30], 2*tileSize-3*pixel+x*tileSize+x*pixel, 2*tileSize-2*pixel+y*tileSize+y*pixel);
            }
          }
          if(leftPressed && inventoryX > 0){
            if(inventoryCursor){
              inventoryCursor = false;
            }
            else{
              inventoryX -= 1;
              inventoryCursor = true;
            }
          }
          if(upPressed && inventoryY > 0){
            if(inventoryCursor){
              inventoryCursor = false;
            }
            else{
              inventoryY -= 1;
              inventoryCursor = true;
            }
          }
          if(rightPressed && inventoryX < 6){
            if(inventoryCursor){
              inventoryCursor = false;
            }
            else{
              inventoryX += 1;
              inventoryCursor = true;
            }
          }
          if(downPressed && inventoryY < 4){
            if(inventoryCursor){
              inventoryCursor = false;
            }
            else{
            inventoryY += 1;
            inventoryCursor = true;
            }
          }
          context.drawImage(image[31], 2*tileSize-3*pixel+inventoryX*tileSize+inventoryX*pixel, 2*tileSize-2*pixel+inventoryY*tileSize+inventoryY*pixel);
        }
        else{
          inventoryCursor = false;
        }
      }
      function detection(){
        for(d = 0; d < door.length; d++){
          door[d].detection();
        }
      }
      function transitions(){
        if(!transition){
          return;
        }
        tr -= 1;
        if(tr > 10){
          context.fillStyle = "rgba(0, 0, 0, 0.1)";
          context.fillRect(0, 0, canvas.width, canvas.height);
        }
        else{
          for(s = 0; s < tr; s++){
            context.fillStyle = "rgba(0, 0, 0, 0.1)";
            context.fillRect(0, 0, canvas.width, canvas.height);
          }
        }
        if(tr == 10){
          hero.XPos = newXPos;
          hero.YPos = newYPos;
          m = newMap;
        }
        if(tr == 0){
          transition = false;
        }
        setTimeout(transitions, 1000/FPS);
      }
      function regen(){
        if(shiftPressed){
          if(bar_stamina.stamina > 0 && (leftPressed || upPressed || rightPressed || downPressed)){
            bar_stamina.stamina -= 2;
            hero.movementSpeed = 18;
            hero.frameSpeed = 2;
          }
          else{
            hero.movementSpeed = 6;
            hero.frameSpeed = 1;
          }
        }
        if(!shiftPressed){
          if(bar_stamina.stamina < 160){
            bar_stamina.stamina += 0.2;
          }
          hero.movementSpeed = 6;
          hero.frameSpeed = 1;
        }
      }
    </script>
  </body>
</html>